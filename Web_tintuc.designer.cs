#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web_tintuc2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="web_tintuc")]
	public partial class Web_tintucDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertbinhchon(binhchon instance);
    partial void Updatebinhchon(binhchon instance);
    partial void Deletebinhchon(binhchon instance);
    partial void Insertykien(ykien instance);
    partial void Updateykien(ykien instance);
    partial void Deleteykien(ykien instance);
    partial void Insertlienket(lienket instance);
    partial void Updatelienket(lienket instance);
    partial void Deletelienket(lienket instance);
    partial void Insertloaitin(loaitin instance);
    partial void Updateloaitin(loaitin instance);
    partial void Deleteloaitin(loaitin instance);
    partial void Insertphanquyen(phanquyen instance);
    partial void Updatephanquyen(phanquyen instance);
    partial void Deletephanquyen(phanquyen instance);
    partial void Insertphuongan(phuongan instance);
    partial void Updatephuongan(phuongan instance);
    partial void Deletephuongan(phuongan instance);
    partial void Insertquangcao(quangcao instance);
    partial void Updatequangcao(quangcao instance);
    partial void Deletequangcao(quangcao instance);
    partial void Insertsukien(sukien instance);
    partial void Updatesukien(sukien instance);
    partial void Deletesukien(sukien instance);
    partial void Inserttheloai(theloai instance);
    partial void Updatetheloai(theloai instance);
    partial void Deletetheloai(theloai instance);
    partial void InsertTin(Tin instance);
    partial void UpdateTin(Tin instance);
    partial void DeleteTin(Tin instance);
    partial void InsertTinNoiBat(TinNoiBat instance);
    partial void UpdateTinNoiBat(TinNoiBat instance);
    partial void DeleteTinNoiBat(TinNoiBat instance);
    partial void InsertUserlogin(Userlogin instance);
    partial void UpdateUserlogin(Userlogin instance);
    partial void DeleteUserlogin(Userlogin instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void Insertvitri(vitri instance);
    partial void Updatevitri(vitri instance);
    partial void Deletevitri(vitri instance);
    #endregion
		
		public Web_tintucDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["web_tintucConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Web_tintucDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Web_tintucDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Web_tintucDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Web_tintucDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<binhchon> binhchons
		{
			get
			{
				return this.GetTable<binhchon>();
			}
		}
		
		public System.Data.Linq.Table<ykien> ykiens
		{
			get
			{
				return this.GetTable<ykien>();
			}
		}
		
		public System.Data.Linq.Table<lienket> lienkets
		{
			get
			{
				return this.GetTable<lienket>();
			}
		}
		
		public System.Data.Linq.Table<loaitin> loaitins
		{
			get
			{
				return this.GetTable<loaitin>();
			}
		}
		
		public System.Data.Linq.Table<phanquyen> phanquyens
		{
			get
			{
				return this.GetTable<phanquyen>();
			}
		}
		
		public System.Data.Linq.Table<phuongan> phuongans
		{
			get
			{
				return this.GetTable<phuongan>();
			}
		}
		
		public System.Data.Linq.Table<quangcao> quangcaos
		{
			get
			{
				return this.GetTable<quangcao>();
			}
		}
		
		public System.Data.Linq.Table<sukien> sukiens
		{
			get
			{
				return this.GetTable<sukien>();
			}
		}
		
		public System.Data.Linq.Table<theloai> theloais
		{
			get
			{
				return this.GetTable<theloai>();
			}
		}
		
		public System.Data.Linq.Table<Tin> Tins
		{
			get
			{
				return this.GetTable<Tin>();
			}
		}
		
		public System.Data.Linq.Table<TinNoiBat> TinNoiBats
		{
			get
			{
				return this.GetTable<TinNoiBat>();
			}
		}
		
		public System.Data.Linq.Table<Userlogin> Userlogins
		{
			get
			{
				return this.GetTable<Userlogin>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<vitri> vitris
		{
			get
			{
				return this.GetTable<vitri>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.binhchon")]
	public partial class binhchon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idBc;
		
		private string _MoTa;
		
		private System.Nullable<int> _idLT;
		
		private System.Nullable<int> _SoLanChon;
		
		private System.Nullable<byte> _Anhien;
		
		private System.Nullable<int> _ThuTu;
		
		private EntitySet<phuongan> _phuongans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidBcChanging(int value);
    partial void OnidBcChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnidLTChanging(System.Nullable<int> value);
    partial void OnidLTChanged();
    partial void OnSoLanChonChanging(System.Nullable<int> value);
    partial void OnSoLanChonChanged();
    partial void OnAnhienChanging(System.Nullable<byte> value);
    partial void OnAnhienChanged();
    partial void OnThuTuChanging(System.Nullable<int> value);
    partial void OnThuTuChanged();
    #endregion
		
		public binhchon()
		{
			this._phuongans = new EntitySet<phuongan>(new Action<phuongan>(this.attach_phuongans), new Action<phuongan>(this.detach_phuongans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idBc
		{
			get
			{
				return this._idBc;
			}
			set
			{
				if ((this._idBc != value))
				{
					this.OnidBcChanging(value);
					this.SendPropertyChanging();
					this._idBc = value;
					this.SendPropertyChanged("idBc");
					this.OnidBcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(255)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLT", DbType="Int")]
		public System.Nullable<int> idLT
		{
			get
			{
				return this._idLT;
			}
			set
			{
				if ((this._idLT != value))
				{
					this.OnidLTChanging(value);
					this.SendPropertyChanging();
					this._idLT = value;
					this.SendPropertyChanged("idLT");
					this.OnidLTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLanChon", DbType="Int")]
		public System.Nullable<int> SoLanChon
		{
			get
			{
				return this._SoLanChon;
			}
			set
			{
				if ((this._SoLanChon != value))
				{
					this.OnSoLanChonChanging(value);
					this.SendPropertyChanging();
					this._SoLanChon = value;
					this.SendPropertyChanged("SoLanChon");
					this.OnSoLanChonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anhien", DbType="TinyInt")]
		public System.Nullable<byte> Anhien
		{
			get
			{
				return this._Anhien;
			}
			set
			{
				if ((this._Anhien != value))
				{
					this.OnAnhienChanging(value);
					this.SendPropertyChanging();
					this._Anhien = value;
					this.SendPropertyChanged("Anhien");
					this.OnAnhienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuTu", DbType="Int")]
		public System.Nullable<int> ThuTu
		{
			get
			{
				return this._ThuTu;
			}
			set
			{
				if ((this._ThuTu != value))
				{
					this.OnThuTuChanging(value);
					this.SendPropertyChanging();
					this._ThuTu = value;
					this.SendPropertyChanged("ThuTu");
					this.OnThuTuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="binhchon_phuongan", Storage="_phuongans", ThisKey="idBc", OtherKey="idBC")]
		public EntitySet<phuongan> phuongans
		{
			get
			{
				return this._phuongans;
			}
			set
			{
				this._phuongans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_phuongans(phuongan entity)
		{
			this.SendPropertyChanging();
			entity.binhchon = this;
		}
		
		private void detach_phuongans(phuongan entity)
		{
			this.SendPropertyChanging();
			entity.binhchon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ykien")]
	public partial class ykien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idYKien;
		
		private System.Nullable<System.DateTime> _Ngay;
		
		private string _NoiDung;
		
		private string _Email;
		
		private string _HoTen;
		
		private string _Diachi;
		
		private System.Nullable<int> _idTin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidYKienChanging(int value);
    partial void OnidYKienChanged();
    partial void OnNgayChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnDiachiChanging(string value);
    partial void OnDiachiChanged();
    partial void OnidTinChanging(System.Nullable<int> value);
    partial void OnidTinChanged();
    #endregion
		
		public ykien()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idYKien", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idYKien
		{
			get
			{
				return this._idYKien;
			}
			set
			{
				if ((this._idYKien != value))
				{
					this.OnidYKienChanging(value);
					this.SendPropertyChanging();
					this._idYKien = value;
					this.SendPropertyChanged("idYKien");
					this.OnidYKienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="Date")]
		public System.Nullable<System.DateTime> Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(500)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(30)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(30)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachi", DbType="NVarChar(50)")]
		public string Diachi
		{
			get
			{
				return this._Diachi;
			}
			set
			{
				if ((this._Diachi != value))
				{
					this.OnDiachiChanging(value);
					this.SendPropertyChanging();
					this._Diachi = value;
					this.SendPropertyChanged("Diachi");
					this.OnDiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTin", DbType="Int")]
		public System.Nullable<int> idTin
		{
			get
			{
				return this._idTin;
			}
			set
			{
				if ((this._idTin != value))
				{
					this.OnidTinChanging(value);
					this.SendPropertyChanging();
					this._idTin = value;
					this.SendPropertyChanged("idTin");
					this.OnidTinChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lienket")]
	public partial class lienket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idLienKet;
		
		private string _Ten;
		
		private string _Url;
		
		private System.Nullable<int> _ThuTu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidLienKetChanging(string value);
    partial void OnidLienKetChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnThuTuChanging(System.Nullable<int> value);
    partial void OnThuTuChanged();
    #endregion
		
		public lienket()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLienKet", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idLienKet
		{
			get
			{
				return this._idLienKet;
			}
			set
			{
				if ((this._idLienKet != value))
				{
					this.OnidLienKetChanging(value);
					this.SendPropertyChanging();
					this._idLienKet = value;
					this.SendPropertyChanged("idLienKet");
					this.OnidLienKetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(255)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuTu", DbType="Int")]
		public System.Nullable<int> ThuTu
		{
			get
			{
				return this._ThuTu;
			}
			set
			{
				if ((this._ThuTu != value))
				{
					this.OnThuTuChanging(value);
					this.SendPropertyChanging();
					this._ThuTu = value;
					this.SendPropertyChanged("ThuTu");
					this.OnThuTuChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.loaitin")]
	public partial class loaitin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idLT;
		
		private string _Ten;
		
		private System.Nullable<int> _ThuTu;
		
		private System.Nullable<byte> _AnHien;
		
		private System.Nullable<int> _idTL;
		
		private EntitySet<Tin> _Tins;
		
		private EntityRef<theloai> _theloai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidLTChanging(int value);
    partial void OnidLTChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnThuTuChanging(System.Nullable<int> value);
    partial void OnThuTuChanged();
    partial void OnAnHienChanging(System.Nullable<byte> value);
    partial void OnAnHienChanged();
    partial void OnidTLChanging(System.Nullable<int> value);
    partial void OnidTLChanged();
    #endregion
		
		public loaitin()
		{
			this._Tins = new EntitySet<Tin>(new Action<Tin>(this.attach_Tins), new Action<Tin>(this.detach_Tins));
			this._theloai = default(EntityRef<theloai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idLT
		{
			get
			{
				return this._idLT;
			}
			set
			{
				if ((this._idLT != value))
				{
					this.OnidLTChanging(value);
					this.SendPropertyChanging();
					this._idLT = value;
					this.SendPropertyChanged("idLT");
					this.OnidLTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(255)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuTu", DbType="Int")]
		public System.Nullable<int> ThuTu
		{
			get
			{
				return this._ThuTu;
			}
			set
			{
				if ((this._ThuTu != value))
				{
					this.OnThuTuChanging(value);
					this.SendPropertyChanging();
					this._ThuTu = value;
					this.SendPropertyChanged("ThuTu");
					this.OnThuTuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnHien", DbType="TinyInt")]
		public System.Nullable<byte> AnHien
		{
			get
			{
				return this._AnHien;
			}
			set
			{
				if ((this._AnHien != value))
				{
					this.OnAnHienChanging(value);
					this.SendPropertyChanging();
					this._AnHien = value;
					this.SendPropertyChanged("AnHien");
					this.OnAnHienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTL", DbType="Int")]
		public System.Nullable<int> idTL
		{
			get
			{
				return this._idTL;
			}
			set
			{
				if ((this._idTL != value))
				{
					if (this._theloai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTLChanging(value);
					this.SendPropertyChanging();
					this._idTL = value;
					this.SendPropertyChanged("idTL");
					this.OnidTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="loaitin_Tin", Storage="_Tins", ThisKey="idLT", OtherKey="idLT")]
		public EntitySet<Tin> Tins
		{
			get
			{
				return this._Tins;
			}
			set
			{
				this._Tins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="theloai_loaitin", Storage="_theloai", ThisKey="idTL", OtherKey="idTL", IsForeignKey=true)]
		public theloai theloai
		{
			get
			{
				return this._theloai.Entity;
			}
			set
			{
				theloai previousValue = this._theloai.Entity;
				if (((previousValue != value) 
							|| (this._theloai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._theloai.Entity = null;
						previousValue.loaitins.Remove(this);
					}
					this._theloai.Entity = value;
					if ((value != null))
					{
						value.loaitins.Add(this);
						this._idTL = value.idTL;
					}
					else
					{
						this._idTL = default(Nullable<int>);
					}
					this.SendPropertyChanged("theloai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tins(Tin entity)
		{
			this.SendPropertyChanging();
			entity.loaitin = this;
		}
		
		private void detach_Tins(Tin entity)
		{
			this.SendPropertyChanging();
			entity.loaitin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.phanquyen")]
	public partial class phanquyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idRole;
		
		private string _Ten;
		
		private string _Mota;
		
		private System.Nullable<int> _IdGroup;
		
		private System.Nullable<int> _idUser;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRoleChanging(string value);
    partial void OnidRoleChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    partial void OnIdGroupChanging(System.Nullable<int> value);
    partial void OnIdGroupChanged();
    partial void OnidUserChanging(System.Nullable<int> value);
    partial void OnidUserChanged();
    #endregion
		
		public phanquyen()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRole", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idRole
		{
			get
			{
				return this._idRole;
			}
			set
			{
				if ((this._idRole != value))
				{
					this.OnidRoleChanging(value);
					this.SendPropertyChanging();
					this._idRole = value;
					this.SendPropertyChanged("idRole");
					this.OnidRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NChar(10)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NChar(10)")]
		public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGroup", DbType="Int")]
		public System.Nullable<int> IdGroup
		{
			get
			{
				return this._IdGroup;
			}
			set
			{
				if ((this._IdGroup != value))
				{
					this.OnIdGroupChanging(value);
					this.SendPropertyChanging();
					this._IdGroup = value;
					this.SendPropertyChanged("IdGroup");
					this.OnIdGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="Int")]
		public System.Nullable<int> idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_phanquyen", Storage="_User", ThisKey="idUser", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.phanquyens.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.phanquyens.Add(this);
						this._idUser = value.idUser;
					}
					else
					{
						this._idUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.phuongan")]
	public partial class phuongan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPA;
		
		private string _Mota;
		
		private System.Nullable<int> _SoLanChon;
		
		private System.Nullable<int> _idBC;
		
		private EntityRef<binhchon> _binhchon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPAChanging(int value);
    partial void OnidPAChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    partial void OnSoLanChonChanging(System.Nullable<int> value);
    partial void OnSoLanChonChanged();
    partial void OnidBCChanging(System.Nullable<int> value);
    partial void OnidBCChanged();
    #endregion
		
		public phuongan()
		{
			this._binhchon = default(EntityRef<binhchon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idPA
		{
			get
			{
				return this._idPA;
			}
			set
			{
				if ((this._idPA != value))
				{
					this.OnidPAChanging(value);
					this.SendPropertyChanging();
					this._idPA = value;
					this.SendPropertyChanged("idPA");
					this.OnidPAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NVarChar(255)")]
		public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLanChon", DbType="Int")]
		public System.Nullable<int> SoLanChon
		{
			get
			{
				return this._SoLanChon;
			}
			set
			{
				if ((this._SoLanChon != value))
				{
					this.OnSoLanChonChanging(value);
					this.SendPropertyChanging();
					this._SoLanChon = value;
					this.SendPropertyChanged("SoLanChon");
					this.OnSoLanChonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBC", DbType="Int")]
		public System.Nullable<int> idBC
		{
			get
			{
				return this._idBC;
			}
			set
			{
				if ((this._idBC != value))
				{
					if (this._binhchon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBCChanging(value);
					this.SendPropertyChanging();
					this._idBC = value;
					this.SendPropertyChanged("idBC");
					this.OnidBCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="binhchon_phuongan", Storage="_binhchon", ThisKey="idBC", OtherKey="idBc", IsForeignKey=true)]
		public binhchon binhchon
		{
			get
			{
				return this._binhchon.Entity;
			}
			set
			{
				binhchon previousValue = this._binhchon.Entity;
				if (((previousValue != value) 
							|| (this._binhchon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._binhchon.Entity = null;
						previousValue.phuongans.Remove(this);
					}
					this._binhchon.Entity = value;
					if ((value != null))
					{
						value.phuongans.Add(this);
						this._idBC = value.idBc;
					}
					else
					{
						this._idBC = default(Nullable<int>);
					}
					this.SendPropertyChanged("binhchon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.quangcao")]
	public partial class quangcao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idQC;
		
		private string _Mota;
		
		private string _Url;
		
		private string _UrlHinh;
		
		private System.Nullable<int> _idLT;
		
		private System.Nullable<int> _idVitri;
		
		private EntityRef<vitri> _vitri;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidQCChanging(int value);
    partial void OnidQCChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnUrlHinhChanging(string value);
    partial void OnUrlHinhChanged();
    partial void OnidLTChanging(System.Nullable<int> value);
    partial void OnidLTChanged();
    partial void OnidVitriChanging(System.Nullable<int> value);
    partial void OnidVitriChanged();
    #endregion
		
		public quangcao()
		{
			this._vitri = default(EntityRef<vitri>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idQC", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idQC
		{
			get
			{
				return this._idQC;
			}
			set
			{
				if ((this._idQC != value))
				{
					this.OnidQCChanging(value);
					this.SendPropertyChanging();
					this._idQC = value;
					this.SendPropertyChanged("idQC");
					this.OnidQCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NVarChar(255)")]
		public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(255)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlHinh", DbType="NVarChar(255)")]
		public string UrlHinh
		{
			get
			{
				return this._UrlHinh;
			}
			set
			{
				if ((this._UrlHinh != value))
				{
					this.OnUrlHinhChanging(value);
					this.SendPropertyChanging();
					this._UrlHinh = value;
					this.SendPropertyChanged("UrlHinh");
					this.OnUrlHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLT", DbType="Int")]
		public System.Nullable<int> idLT
		{
			get
			{
				return this._idLT;
			}
			set
			{
				if ((this._idLT != value))
				{
					this.OnidLTChanging(value);
					this.SendPropertyChanging();
					this._idLT = value;
					this.SendPropertyChanged("idLT");
					this.OnidLTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idVitri", DbType="Int")]
		public System.Nullable<int> idVitri
		{
			get
			{
				return this._idVitri;
			}
			set
			{
				if ((this._idVitri != value))
				{
					if (this._vitri.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidVitriChanging(value);
					this.SendPropertyChanging();
					this._idVitri = value;
					this.SendPropertyChanged("idVitri");
					this.OnidVitriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="vitri_quangcao", Storage="_vitri", ThisKey="idVitri", OtherKey="idViTri", IsForeignKey=true)]
		public vitri vitri
		{
			get
			{
				return this._vitri.Entity;
			}
			set
			{
				vitri previousValue = this._vitri.Entity;
				if (((previousValue != value) 
							|| (this._vitri.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._vitri.Entity = null;
						previousValue.quangcaos.Remove(this);
					}
					this._vitri.Entity = value;
					if ((value != null))
					{
						value.quangcaos.Add(this);
						this._idVitri = value.idViTri;
					}
					else
					{
						this._idVitri = default(Nullable<int>);
					}
					this.SendPropertyChanged("vitri");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sukien")]
	public partial class sukien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idSk;
		
		private string _MoTa;
		
		private EntitySet<Tin> _Tins;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidSkChanging(int value);
    partial void OnidSkChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public sukien()
		{
			this._Tins = new EntitySet<Tin>(new Action<Tin>(this.attach_Tins), new Action<Tin>(this.detach_Tins));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSk", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idSk
		{
			get
			{
				return this._idSk;
			}
			set
			{
				if ((this._idSk != value))
				{
					this.OnidSkChanging(value);
					this.SendPropertyChanging();
					this._idSk = value;
					this.SendPropertyChanged("idSk");
					this.OnidSkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NChar(10)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sukien_Tin", Storage="_Tins", ThisKey="idSk", OtherKey="idSk")]
		public EntitySet<Tin> Tins
		{
			get
			{
				return this._Tins;
			}
			set
			{
				this._Tins.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tins(Tin entity)
		{
			this.SendPropertyChanging();
			entity.sukien = this;
		}
		
		private void detach_Tins(Tin entity)
		{
			this.SendPropertyChanging();
			entity.sukien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.theloai")]
	public partial class theloai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTL;
		
		private string _TenTL;
		
		private System.Nullable<int> _ThuTu;
		
		private System.Nullable<byte> _AnHien;
		
		private EntitySet<loaitin> _loaitins;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTLChanging(int value);
    partial void OnidTLChanged();
    partial void OnTenTLChanging(string value);
    partial void OnTenTLChanged();
    partial void OnThuTuChanging(System.Nullable<int> value);
    partial void OnThuTuChanged();
    partial void OnAnHienChanging(System.Nullable<byte> value);
    partial void OnAnHienChanged();
    #endregion
		
		public theloai()
		{
			this._loaitins = new EntitySet<loaitin>(new Action<loaitin>(this.attach_loaitins), new Action<loaitin>(this.detach_loaitins));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTL", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idTL
		{
			get
			{
				return this._idTL;
			}
			set
			{
				if ((this._idTL != value))
				{
					this.OnidTLChanging(value);
					this.SendPropertyChanging();
					this._idTL = value;
					this.SendPropertyChanged("idTL");
					this.OnidTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTL", DbType="NVarChar(100)")]
		public string TenTL
		{
			get
			{
				return this._TenTL;
			}
			set
			{
				if ((this._TenTL != value))
				{
					this.OnTenTLChanging(value);
					this.SendPropertyChanging();
					this._TenTL = value;
					this.SendPropertyChanged("TenTL");
					this.OnTenTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuTu", DbType="Int")]
		public System.Nullable<int> ThuTu
		{
			get
			{
				return this._ThuTu;
			}
			set
			{
				if ((this._ThuTu != value))
				{
					this.OnThuTuChanging(value);
					this.SendPropertyChanging();
					this._ThuTu = value;
					this.SendPropertyChanged("ThuTu");
					this.OnThuTuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnHien", DbType="TinyInt")]
		public System.Nullable<byte> AnHien
		{
			get
			{
				return this._AnHien;
			}
			set
			{
				if ((this._AnHien != value))
				{
					this.OnAnHienChanging(value);
					this.SendPropertyChanging();
					this._AnHien = value;
					this.SendPropertyChanged("AnHien");
					this.OnAnHienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="theloai_loaitin", Storage="_loaitins", ThisKey="idTL", OtherKey="idTL")]
		public EntitySet<loaitin> loaitins
		{
			get
			{
				return this._loaitins;
			}
			set
			{
				this._loaitins.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_loaitins(loaitin entity)
		{
			this.SendPropertyChanging();
			entity.theloai = this;
		}
		
		private void detach_loaitins(loaitin entity)
		{
			this.SendPropertyChanging();
			entity.theloai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tin")]
	public partial class Tin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTin;
		
		private string _TieuDe;
		
		private string _TomTat;
		
		private System.Nullable<System.DateTime> _Ngay;
		
		private string _NoiDung1;
		
		private string _NoiDung2;
		
		private string _urlHinh;
		
		private System.Nullable<int> _SoLanXem;
		
		private string _TinNoiBat;
		
		private System.Nullable<byte> _AnHien;
		
		private System.Nullable<int> _idUser;
		
		private System.Nullable<int> _idSk;
		
		private System.Nullable<int> _idLT;
		
		private EntitySet<TinNoiBat> _TinNoiBats;
		
		private EntityRef<loaitin> _loaitin;
		
		private EntityRef<sukien> _sukien;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTinChanging(int value);
    partial void OnidTinChanged();
    partial void OnTieuDeChanging(string value);
    partial void OnTieuDeChanged();
    partial void OnTomTatChanging(string value);
    partial void OnTomTatChanged();
    partial void OnNgayChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayChanged();
    partial void OnNoiDung1Changing(string value);
    partial void OnNoiDung1Changed();
    partial void OnNoiDung2Changing(string value);
    partial void OnNoiDung2Changed();
    partial void OnurlHinhChanging(string value);
    partial void OnurlHinhChanged();
    partial void OnSoLanXemChanging(System.Nullable<int> value);
    partial void OnSoLanXemChanged();
    partial void OnTinNoiBatChanging(string value);
    partial void OnTinNoiBatChanged();
    partial void OnAnHienChanging(System.Nullable<byte> value);
    partial void OnAnHienChanged();
    partial void OnidUserChanging(System.Nullable<int> value);
    partial void OnidUserChanged();
    partial void OnidSkChanging(System.Nullable<int> value);
    partial void OnidSkChanged();
    partial void OnidLTChanging(System.Nullable<int> value);
    partial void OnidLTChanged();
    #endregion
		
		public Tin()
		{
			this._TinNoiBats = new EntitySet<TinNoiBat>(new Action<TinNoiBat>(this.attach_TinNoiBats), new Action<TinNoiBat>(this.detach_TinNoiBats));
			this._loaitin = default(EntityRef<loaitin>);
			this._sukien = default(EntityRef<sukien>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTin", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idTin
		{
			get
			{
				return this._idTin;
			}
			set
			{
				if ((this._idTin != value))
				{
					this.OnidTinChanging(value);
					this.SendPropertyChanging();
					this._idTin = value;
					this.SendPropertyChanged("idTin");
					this.OnidTinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuDe", DbType="NVarChar(255)")]
		public string TieuDe
		{
			get
			{
				return this._TieuDe;
			}
			set
			{
				if ((this._TieuDe != value))
				{
					this.OnTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TieuDe = value;
					this.SendPropertyChanged("TieuDe");
					this.OnTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TomTat", DbType="NVarChar(1500)")]
		public string TomTat
		{
			get
			{
				return this._TomTat;
			}
			set
			{
				if ((this._TomTat != value))
				{
					this.OnTomTatChanging(value);
					this.SendPropertyChanging();
					this._TomTat = value;
					this.SendPropertyChanged("TomTat");
					this.OnTomTatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="Date")]
		public System.Nullable<System.DateTime> Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung1", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string NoiDung1
		{
			get
			{
				return this._NoiDung1;
			}
			set
			{
				if ((this._NoiDung1 != value))
				{
					this.OnNoiDung1Changing(value);
					this.SendPropertyChanging();
					this._NoiDung1 = value;
					this.SendPropertyChanged("NoiDung1");
					this.OnNoiDung1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung2", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string NoiDung2
		{
			get
			{
				return this._NoiDung2;
			}
			set
			{
				if ((this._NoiDung2 != value))
				{
					this.OnNoiDung2Changing(value);
					this.SendPropertyChanging();
					this._NoiDung2 = value;
					this.SendPropertyChanged("NoiDung2");
					this.OnNoiDung2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_urlHinh", DbType="NVarChar(1000)")]
		public string urlHinh
		{
			get
			{
				return this._urlHinh;
			}
			set
			{
				if ((this._urlHinh != value))
				{
					this.OnurlHinhChanging(value);
					this.SendPropertyChanging();
					this._urlHinh = value;
					this.SendPropertyChanged("urlHinh");
					this.OnurlHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLanXem", DbType="Int")]
		public System.Nullable<int> SoLanXem
		{
			get
			{
				return this._SoLanXem;
			}
			set
			{
				if ((this._SoLanXem != value))
				{
					this.OnSoLanXemChanging(value);
					this.SendPropertyChanging();
					this._SoLanXem = value;
					this.SendPropertyChanged("SoLanXem");
					this.OnSoLanXemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinNoiBat", DbType="NVarChar(50)")]
		public string TinNoiBat
		{
			get
			{
				return this._TinNoiBat;
			}
			set
			{
				if ((this._TinNoiBat != value))
				{
					this.OnTinNoiBatChanging(value);
					this.SendPropertyChanging();
					this._TinNoiBat = value;
					this.SendPropertyChanged("TinNoiBat");
					this.OnTinNoiBatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnHien", DbType="TinyInt")]
		public System.Nullable<byte> AnHien
		{
			get
			{
				return this._AnHien;
			}
			set
			{
				if ((this._AnHien != value))
				{
					this.OnAnHienChanging(value);
					this.SendPropertyChanging();
					this._AnHien = value;
					this.SendPropertyChanged("AnHien");
					this.OnAnHienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="Int")]
		public System.Nullable<int> idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSk", DbType="Int")]
		public System.Nullable<int> idSk
		{
			get
			{
				return this._idSk;
			}
			set
			{
				if ((this._idSk != value))
				{
					if (this._sukien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidSkChanging(value);
					this.SendPropertyChanging();
					this._idSk = value;
					this.SendPropertyChanged("idSk");
					this.OnidSkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLT", DbType="Int")]
		public System.Nullable<int> idLT
		{
			get
			{
				return this._idLT;
			}
			set
			{
				if ((this._idLT != value))
				{
					if (this._loaitin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidLTChanging(value);
					this.SendPropertyChanging();
					this._idLT = value;
					this.SendPropertyChanged("idLT");
					this.OnidLTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tin_TinNoiBat", Storage="_TinNoiBats", ThisKey="idTin", OtherKey="idTin")]
		public EntitySet<TinNoiBat> TinNoiBats
		{
			get
			{
				return this._TinNoiBats;
			}
			set
			{
				this._TinNoiBats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="loaitin_Tin", Storage="_loaitin", ThisKey="idLT", OtherKey="idLT", IsForeignKey=true)]
		public loaitin loaitin
		{
			get
			{
				return this._loaitin.Entity;
			}
			set
			{
				loaitin previousValue = this._loaitin.Entity;
				if (((previousValue != value) 
							|| (this._loaitin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._loaitin.Entity = null;
						previousValue.Tins.Remove(this);
					}
					this._loaitin.Entity = value;
					if ((value != null))
					{
						value.Tins.Add(this);
						this._idLT = value.idLT;
					}
					else
					{
						this._idLT = default(Nullable<int>);
					}
					this.SendPropertyChanged("loaitin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sukien_Tin", Storage="_sukien", ThisKey="idSk", OtherKey="idSk", IsForeignKey=true)]
		public sukien sukien
		{
			get
			{
				return this._sukien.Entity;
			}
			set
			{
				sukien previousValue = this._sukien.Entity;
				if (((previousValue != value) 
							|| (this._sukien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sukien.Entity = null;
						previousValue.Tins.Remove(this);
					}
					this._sukien.Entity = value;
					if ((value != null))
					{
						value.Tins.Add(this);
						this._idSk = value.idSk;
					}
					else
					{
						this._idSk = default(Nullable<int>);
					}
					this.SendPropertyChanged("sukien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Tin", Storage="_User", ThisKey="idUser", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Tins.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Tins.Add(this);
						this._idUser = value.idUser;
					}
					else
					{
						this._idUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TinNoiBats(TinNoiBat entity)
		{
			this.SendPropertyChanging();
			entity.Tin = this;
		}
		
		private void detach_TinNoiBats(TinNoiBat entity)
		{
			this.SendPropertyChanging();
			entity.Tin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TinNoiBat")]
	public partial class TinNoiBat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTinNB;
		
		private string _TieudeTin;
		
		private System.Nullable<int> _idTin;
		
		private EntityRef<Tin> _Tin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTinNBChanging(int value);
    partial void OnidTinNBChanged();
    partial void OnTieudeTinChanging(string value);
    partial void OnTieudeTinChanged();
    partial void OnidTinChanging(System.Nullable<int> value);
    partial void OnidTinChanged();
    #endregion
		
		public TinNoiBat()
		{
			this._Tin = default(EntityRef<Tin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTinNB", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTinNB
		{
			get
			{
				return this._idTinNB;
			}
			set
			{
				if ((this._idTinNB != value))
				{
					this.OnidTinNBChanging(value);
					this.SendPropertyChanging();
					this._idTinNB = value;
					this.SendPropertyChanged("idTinNB");
					this.OnidTinNBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieudeTin", DbType="NVarChar(300)")]
		public string TieudeTin
		{
			get
			{
				return this._TieudeTin;
			}
			set
			{
				if ((this._TieudeTin != value))
				{
					this.OnTieudeTinChanging(value);
					this.SendPropertyChanging();
					this._TieudeTin = value;
					this.SendPropertyChanged("TieudeTin");
					this.OnTieudeTinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTin", DbType="Int")]
		public System.Nullable<int> idTin
		{
			get
			{
				return this._idTin;
			}
			set
			{
				if ((this._idTin != value))
				{
					if (this._Tin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTinChanging(value);
					this.SendPropertyChanging();
					this._idTin = value;
					this.SendPropertyChanged("idTin");
					this.OnidTinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tin_TinNoiBat", Storage="_Tin", ThisKey="idTin", OtherKey="idTin", IsForeignKey=true)]
		public Tin Tin
		{
			get
			{
				return this._Tin.Entity;
			}
			set
			{
				Tin previousValue = this._Tin.Entity;
				if (((previousValue != value) 
							|| (this._Tin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tin.Entity = null;
						previousValue.TinNoiBats.Remove(this);
					}
					this._Tin.Entity = value;
					if ((value != null))
					{
						value.TinNoiBats.Add(this);
						this._idTin = value.idTin;
					}
					else
					{
						this._idTin = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Userlogin")]
	public partial class Userlogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUserName;
		
		private string _Username;
		
		private string _Password;
		
		private System.Nullable<int> _idUser;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUserNameChanging(int value);
    partial void OnIdUserNameChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnidUserChanging(System.Nullable<int> value);
    partial void OnidUserChanged();
    #endregion
		
		public Userlogin()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUserName", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdUserName
		{
			get
			{
				return this._IdUserName;
			}
			set
			{
				if ((this._IdUserName != value))
				{
					this.OnIdUserNameChanging(value);
					this.SendPropertyChanging();
					this._IdUserName = value;
					this.SendPropertyChanged("IdUserName");
					this.OnIdUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(15)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(40)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="Int")]
		public System.Nullable<int> idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Userlogin", Storage="_User", ThisKey="idUser", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Userlogins.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Userlogins.Add(this);
						this._idUser = value.idUser;
					}
					else
					{
						this._idUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUser;
		
		private string _HoTen;
		
		private string _Diachi;
		
		private string _Email;
		
		private string _Dienthoai;
		
		private string _Gioitinh;
		
		private string _Ngaysinh;
		
		private System.Nullable<int> _idGroup;
		
		private System.Nullable<System.DateTime> _NgayDangKi;
		
		private string _Active;
		
		private EntitySet<phanquyen> _phanquyens;
		
		private EntitySet<Tin> _Tins;
		
		private EntitySet<Userlogin> _Userlogins;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUserChanging(int value);
    partial void OnidUserChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnDiachiChanging(string value);
    partial void OnDiachiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDienthoaiChanging(string value);
    partial void OnDienthoaiChanged();
    partial void OnGioitinhChanging(string value);
    partial void OnGioitinhChanged();
    partial void OnNgaysinhChanging(string value);
    partial void OnNgaysinhChanged();
    partial void OnidGroupChanging(System.Nullable<int> value);
    partial void OnidGroupChanged();
    partial void OnNgayDangKiChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDangKiChanged();
    partial void OnActiveChanging(string value);
    partial void OnActiveChanged();
    #endregion
		
		public User()
		{
			this._phanquyens = new EntitySet<phanquyen>(new Action<phanquyen>(this.attach_phanquyens), new Action<phanquyen>(this.detach_phanquyens));
			this._Tins = new EntitySet<Tin>(new Action<Tin>(this.attach_Tins), new Action<Tin>(this.detach_Tins));
			this._Userlogins = new EntitySet<Userlogin>(new Action<Userlogin>(this.attach_Userlogins), new Action<Userlogin>(this.detach_Userlogins));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(40)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachi", DbType="NVarChar(50)")]
		public string Diachi
		{
			get
			{
				return this._Diachi;
			}
			set
			{
				if ((this._Diachi != value))
				{
					this.OnDiachiChanging(value);
					this.SendPropertyChanging();
					this._Diachi = value;
					this.SendPropertyChanged("Diachi");
					this.OnDiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(30)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dienthoai", DbType="NChar(12)")]
		public string Dienthoai
		{
			get
			{
				return this._Dienthoai;
			}
			set
			{
				if ((this._Dienthoai != value))
				{
					this.OnDienthoaiChanging(value);
					this.SendPropertyChanging();
					this._Dienthoai = value;
					this.SendPropertyChanged("Dienthoai");
					this.OnDienthoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gioitinh", DbType="NVarChar(6)")]
		public string Gioitinh
		{
			get
			{
				return this._Gioitinh;
			}
			set
			{
				if ((this._Gioitinh != value))
				{
					this.OnGioitinhChanging(value);
					this.SendPropertyChanging();
					this._Gioitinh = value;
					this.SendPropertyChanged("Gioitinh");
					this.OnGioitinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaysinh", DbType="NVarChar(14)")]
		public string Ngaysinh
		{
			get
			{
				return this._Ngaysinh;
			}
			set
			{
				if ((this._Ngaysinh != value))
				{
					this.OnNgaysinhChanging(value);
					this.SendPropertyChanging();
					this._Ngaysinh = value;
					this.SendPropertyChanged("Ngaysinh");
					this.OnNgaysinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGroup", DbType="Int")]
		public System.Nullable<int> idGroup
		{
			get
			{
				return this._idGroup;
			}
			set
			{
				if ((this._idGroup != value))
				{
					this.OnidGroupChanging(value);
					this.SendPropertyChanging();
					this._idGroup = value;
					this.SendPropertyChanged("idGroup");
					this.OnidGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDangKi", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDangKi
		{
			get
			{
				return this._NgayDangKi;
			}
			set
			{
				if ((this._NgayDangKi != value))
				{
					this.OnNgayDangKiChanging(value);
					this.SendPropertyChanging();
					this._NgayDangKi = value;
					this.SendPropertyChanged("NgayDangKi");
					this.OnNgayDangKiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="NVarChar(10)")]
		public string Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_phanquyen", Storage="_phanquyens", ThisKey="idUser", OtherKey="idUser")]
		public EntitySet<phanquyen> phanquyens
		{
			get
			{
				return this._phanquyens;
			}
			set
			{
				this._phanquyens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Tin", Storage="_Tins", ThisKey="idUser", OtherKey="idUser")]
		public EntitySet<Tin> Tins
		{
			get
			{
				return this._Tins;
			}
			set
			{
				this._Tins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Userlogin", Storage="_Userlogins", ThisKey="idUser", OtherKey="idUser")]
		public EntitySet<Userlogin> Userlogins
		{
			get
			{
				return this._Userlogins;
			}
			set
			{
				this._Userlogins.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_phanquyens(phanquyen entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_phanquyens(phanquyen entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Tins(Tin entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Tins(Tin entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Userlogins(Userlogin entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Userlogins(Userlogin entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vitri")]
	public partial class vitri : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idViTri;
		
		private string _TenViTri;
		
		private EntitySet<quangcao> _quangcaos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidViTriChanging(int value);
    partial void OnidViTriChanged();
    partial void OnTenViTriChanging(string value);
    partial void OnTenViTriChanged();
    #endregion
		
		public vitri()
		{
			this._quangcaos = new EntitySet<quangcao>(new Action<quangcao>(this.attach_quangcaos), new Action<quangcao>(this.detach_quangcaos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idViTri", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idViTri
		{
			get
			{
				return this._idViTri;
			}
			set
			{
				if ((this._idViTri != value))
				{
					this.OnidViTriChanging(value);
					this.SendPropertyChanging();
					this._idViTri = value;
					this.SendPropertyChanged("idViTri");
					this.OnidViTriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenViTri", DbType="NVarChar(255)")]
		public string TenViTri
		{
			get
			{
				return this._TenViTri;
			}
			set
			{
				if ((this._TenViTri != value))
				{
					this.OnTenViTriChanging(value);
					this.SendPropertyChanging();
					this._TenViTri = value;
					this.SendPropertyChanged("TenViTri");
					this.OnTenViTriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="vitri_quangcao", Storage="_quangcaos", ThisKey="idViTri", OtherKey="idVitri")]
		public EntitySet<quangcao> quangcaos
		{
			get
			{
				return this._quangcaos;
			}
			set
			{
				this._quangcaos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_quangcaos(quangcao entity)
		{
			this.SendPropertyChanging();
			entity.vitri = this;
		}
		
		private void detach_quangcaos(quangcao entity)
		{
			this.SendPropertyChanging();
			entity.vitri = null;
		}
	}
}
#pragma warning restore 1591
